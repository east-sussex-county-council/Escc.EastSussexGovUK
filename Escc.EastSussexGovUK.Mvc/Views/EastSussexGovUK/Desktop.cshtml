@using System.Globalization
@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Escc.EastSussexGovUK.Features
@using Escc.EastSussexGovUK.Views
@using Escc.Web
@model Escc.EastSussexGovUK.Mvc.BaseViewModel
@{
    Layout = null;
    if (Model == null)
    {
        throw new NotSupportedException("This view requires a model based on Escc.EastSussexGovUK.Mvc.BaseViewModel");
    }
    Model.EsccWebsiteView = EsccWebsiteView.Desktop;
    Html.RenderPartial("~/Views/EastSussexGovUK/_FeatureDependency.cshtml", Model.EsccWebsiteSkin);

    // In rare circumstances Azure can return a value for Request.Url.Authority which is not correct. Since
    // Request.Url.Authority is used to load client-side assets, ensure it is always allowed by the content security policy.
    var config = new ContentSecurityPolicyFromConfig();
    var filter = new ContentSecurityPolicyUrlFilter(Request.Url, config.UrlsToExclude);
    if (filter.ApplyPolicy() && !Response.HeadersWritten)
    {
        new ContentSecurityPolicyHeaders(Response.Headers)
            .AppendPolicy($"script-src {Request.Url.GetLeftPart(UriPartial.Authority)}; style-src {Request.Url.GetLeftPart(UriPartial.Authority)}; img-src {Request.Url.GetLeftPart(UriPartial.Authority)}")
            .UpdateHeaders();
    }
}
@if (IsSectionDefined("WebChat"))
{
    @RenderSection("WebChat")
}
else
{
    if (Model.WebChat != null)
    {
        Html.RenderPartial("~/Views/EastSussexGovUK/_FeatureDependencies.cshtml", new[] { new WebChat() { WebChatSettings = Model.WebChat } });
    }
}
@Html.Raw(Model.TemplateHtml?.HtmlTag)
<head>
    @RenderSection("ContentExperiment", required: false)
    @Html.Raw(Model.TemplateHtml?.Metadata)
    @{
        if (Model.Metadata.CanonicalPageUrl == null) { Model.Metadata.CanonicalPageUrl = Request.Url; }
        Html.RenderPartial("~/Views/Shared/_Metadata_Head.cshtml", Model.Metadata);
        Html.RenderPartial("~/Views/EastSussexGovUK/_Fonts.cshtml", Model.EsccWebsiteSkin);
    }
    @Html.RenderCssHere()
    @RenderSection("Metadata", required: false)
</head>
@{
    var bodyClass = String.Empty;
    if (IsSectionDefined("BodyClass"))
    {
        using (var writer = new StringWriter())
        {
            RenderSection("BodyClass", required: false).WriteTo(writer);
            bodyClass = writer.ToString();
        }
    }

    var textSize = new TextSize(Request.Cookies?["textsize"]?.Value, Request.QueryString).CurrentTextSize();
    if (textSize > 1)
    {
        bodyClass += " size" + textSize.ToString(CultureInfo.InvariantCulture);
    }

    if (!String.IsNullOrEmpty(bodyClass))
    {
        @:<body class="@bodyClass.Trim()">
        }
        else
        {
            @:<body>
}
@Html.Raw(Model.TemplateHtml?.AboveHeader)
}
@if (IsSectionDefined("Header"))
{
    @RenderSection("Header")
}
else
{
    @Html.Raw(Model.TemplateHtml?.Header);
}
<div id="main" role="main" class="body">
    <div class="container">
        @if (IsSectionDefined("Breadcrumb"))
        {
            @RenderSection("Breadcrumb")
        }
        else
        {
            Html.RenderPartial("~/Views/EastSussexGovUK/_BreadcrumbTrail.cshtml", Model.BreadcrumbProvider);
            Html.RenderPartial("~/Views/EastSussexGovUK/_BreadcrumbTrailMobile.cshtml", Model.BreadcrumbProvider);
        }
        @RenderBody()
    </div>
</div>
@if (IsSectionDefined("Footer"))
{
    @RenderSection("Footer")
}
else
{
    @Html.Raw(Model.TemplateHtml?.Footer)
}
@Html.Raw(Model.TemplateHtml?.Scripts)
@Html.RenderJsHere()
@RenderSection("JavaScript", required: false)
@{ Html.RenderPartial("~/Views/Shared/_Metadata_Body.cshtml", Model.Metadata); }
</body>
</html>
