@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Escc.EastSussexGovUK
@using Escc.EastSussexGovUK.Features
@using Escc.EastSussexGovUK.Mvc.Views.EastSussexGovUK
@using Escc.EastSussexGovUK.Views
@using Escc.Net
@using Escc.Web
@model Escc.EastSussexGovUK.Mvc.BaseViewModel
@{
    if (Model == null) { throw new NotSupportedException("This view requires a model based on Escc.EastSussexGovUK.Mvc.BaseViewModel"); }
    Model.EsccWebsiteView = EsccWebsiteView.FullScreen;
    Html.RenderPartial("~/Views/EastSussexGovUK/_FeatureDependency.cshtml", Model.EsccWebsiteSkin);

    // In rare circumstances Azure can return a value for Request.Url.Authority which is not correct. Since 
    // Request.Url.Authority is used to load client-side assets, ensure it is always allowed by the content security policy.
    new ContentSecurityPolicyHeaders(Response.Headers)
        .AppendPolicy($"script-src {Request.Url.GetLeftPart(UriPartial.Authority)}; style-src {Request.Url.GetLeftPart(UriPartial.Authority)}; img-src {Request.Url.GetLeftPart(UriPartial.Authority)}")
        .UpdateHeaders();
}
@if (IsSectionDefined("WebChat"))
{
    @RenderSection("WebChat")
}
else
{
    // Support web chat - not ideal to do this in the view but there's no common controller
    var context = new HostingEnvironmentContext();
    if (context.WebChatSettingsUrl != null)
    {
        var webChat = new WebChat();
        webChat.WebChatSettings = new WebChatSettingsFromApi(context.WebChatSettingsUrl, new ConfigurationProxyProvider(), new ApplicationCacheStrategy<WebChatSettings>(TimeSpan.FromMinutes(context.WebChatSettingsCacheDuration))).ReadWebChatSettings();
        webChat.WebChatSettings.PageUrl = new Uri(Request.Url.AbsolutePath, UriKind.Relative);
        Html.RenderPartial("~/Views/EastSussexGovUK/_FeatureDependencies.cshtml", new[] { webChat });
    }
}
@{ Html.RenderPartial("~/Views/EastSussexGovUK/MasterPageControl.ascx", new MasterPageControlData { Control = "HtmlTag", BreadcrumbProvider = Model.BreadcrumbProvider }); }
<head>
    @RenderSection("ContentExperiment", required: false)
    @{
        Html.RenderPartial("~/Views/EastSussexGovUK/MasterPageControl.ascx", new MasterPageControlData {Control = "MetadataFullScreen", BreadcrumbProvider = Model.BreadcrumbProvider });
        Html.RenderPartial("~/Views/EastSussexGovUK/MetadataControl.ascx", Model.Metadata);
        Html.RenderPartial("~/Views/EastSussexGovUK/_Fonts.cshtml", Model.EsccWebsiteSkin);
    }
    @Html.RenderCssHere()
    @RenderSection("Metadata", required: false)
</head>
@if (IsSectionDefined("BodyClass"))
{
    @:<body class="@RenderSection("BodyClass")">
}
else
{
    @:<body>
}
<div class="full-screen">
    @if (IsSectionDefined("Header"))
    {
        @RenderSection("Header")
    }
    else
    {
        @:
        <header>
            <div class="header context">
                @{ Html.RenderPartial("~/Views/EastSussexGovUK/MasterPageControl.ascx", new MasterPageControlData {Control = "HeaderFullScreen", BreadcrumbProvider = Model.BreadcrumbProvider}); }
                <div class="full-screen-bar">
                    <h1>@RenderSection("FullScreenHeading", required: false)</h1>
                    @RenderSection("FullScreenLinks", required: false)
                </div>
            </div>
        </header>
    }
    <div id="main" role="main" class="body">
        @RenderBody()
    </div>
    @if (IsSectionDefined("Footer"))
    {
        @RenderSection("Footer");
    }
    @{ Html.RenderPartial("~/Views/EastSussexGovUK/MasterPageControl.ascx", new MasterPageControlData {Control = "ScriptsFullScreen", BreadcrumbProvider = Model.BreadcrumbProvider}); }
    @Html.RenderJsHere()
    @RenderSection("JavaScript", required: false)
</div>
</body>
</html>

@{  // Do not render these sections for this layout
    if (IsSectionDefined("Breadcrumb")) { RenderSection("Breadcrumb").WriteTo(TextWriter.Null); }
}
